#Settings for the Mock ggv.producers generating the sample data
############################

#Orders generated per second
producer.numOrdersPerSecond=1000
#percent of orders that get successfully assigned to a driver (to simulate invalid orders and a scarcity of drivers)
producer.pctOrdersAssigned=98
#percent of orders that are completed successfully (to simulate traffic accidents and other issues)
producer.pctOrdersCompleted=97

#maximum delay for pickup time compared to current time for an order_created event
producer.pickupTimeMaxDelaySeconds=45

#for an order scheduled for pickup in the mid future, how far in advance can it be assigned by the system
producer.assignAdvanceMaxSeconds=15

#for an order scheduled for immediate or near future pickup, how much of a delay is expected between now/pickup time and assignment time
producer.assignDelayMinSeconds=5
producer.assignDelayMaxSeconds=15

#how long does it take between the latter of a system assigning time and it getting completed
producer.completeDelayMinSeconds=30
producer.completeDelayMaxSeconds=45

#minimum and maximum price for an order
producer.minPrice=100
producer.maxPrice=1000

#possible regions
producer.regions=Central, Western, Eastern, Southern, Wai Chai, Sham Shui Po, Kowloon City, Kwun Tong, Wong Tai Sin, Yau Tsim Mong, Islands, Kwai Tsing, North, Sai Kung, Sha Tin, Tai Po, Tsuen Wan, Tuen Mun, Yuen Long

#possible drivers
producer.drivers=Amy,Bob,Chandler,Dylan,Edgar,Fred,Greg,Henry,Isabel,Jake

#for each driver name, how many drivers do we have (e.g. Amy1, Amy2, Amy3). Effectively caps
# total orders assigned < num drivers * ${producer.drivers}.size() - total orders cancelled - total orders completed
producer.numDrivers=10000

#AWS and Kinesis settings
#########################
aws.region=local-host-0
aws.metricsLevel=none
#if running locally, will attempt to spin up kinesalite and dynalite process automatically
aws.isLocal=true

kinesis.endpoint=localhost
kinesis.port=4567

#total shard count for all streams needs to be <= 10 when using default settings for kinesalite/dynalite
kinesis.shardCount=2


dynamodb.endpoint=localhost
dynamodb.port=4568

#names of the streams
stream.orderCreated=order_created
stream.orderAssigned=order_assigned
stream.orderCompleted=order_completed
stream.orderCancelled=order_cancelled

# Metrics settings
#####################

#how often to emit ggv.metrics
ggv.metrics.emitFrequencySeconds=1
#Get the top x Shipping regions
ggv.metrics.topShipRegionsNum=10

web.numThreads=4